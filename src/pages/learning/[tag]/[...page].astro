---
import type {GetStaticPathsOptions} from "astro";
import {TAGS} from '../../../utils/config';
const {page} = Astro.props;
const {tag} = Astro.params;
import {getCollection} from 'astro:content';
import Layout from "../../../layouts/Layout.astro";
import Pagination from "../../../components/Pagination.astro";
import Article from "../../../components/learning/Article.astro";
let allLearningPosts = (await getCollection('docs')).filter(content => content.slug.startsWith('learning'));
if (tag != 'all') allLearningPosts = allLearningPosts.filter(post => post.data.tags.includes(tag))

const learningChannels = [{
    name: '基础学习资料',
    pages: [{
        name: '基础原理和架构',
        url: ""
    }, {
        name: '应用场景',
        url: ""
    }, {
        name: '上手体验',
        url: ""
    }]
}, {
    name: '强力推荐',
    pages: [{
        name: '基础原理和架构',
        url: ""
    }, {
        name: '应用场景',
        url: ""
    }, {
        name: '上手体验',
        url: ""
    }]
}]

export async function getStaticPaths({paginate}: GetStaticPathsOptions) {
    const allLearningPosts = (await getCollection('docs')).filter(content => content.slug.startsWith('learning'));
    const allTags = ['all', ...TAGS.map(tag => tag.slug)];

    const sortedPosts = allLearningPosts.sort(
        (a, b) => new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf()
    );

    return allTags.flatMap((tag) => {
        const filteredPosts = sortedPosts.filter((post) =>
            tag == 'all' || post.data?.tags?.includes(tag)
        );

        return paginate(filteredPosts, {
            params: {tag},
            pageSize: 10,
        });
    });
}
---

<Layout>
    <div class="max-w-screen-xl m-auto mt-10 px-5 flex flex-row items-start gap-5">
        <div class="flex flex-col flex-grow-0 gap-5">
            <!--分类选择Tab-->
            <div class="flex flex-row gap-2">
                {
                    [{
                        name: '全部',
                        slug: 'all'
                    }, ...TAGS].map((currTag) => (
                            <a href={`/learning/${currTag.slug}`}
                               class=`${currTag.slug === tag ? 'bg-white text-[#121316]' : ''} border border-[#4a4c57] text-white text-sm font-bold py-2 px-4 rounded-full m-2`>{currTag.name}</a>
                    ))
                }
            </div>

            <!--文章列表-->
            <div class="flex flex-row">
                <div class="flex flex-col gap-5">
                    {
                        page.data.map(post => (
                                <Article post={post}></Article>
                        ))
                    }
                </div>
            </div>

            <Pagination currentPage={page.currentPage} pageSize={page.size} totalPage={page.lastPage}
                        baseUrl={`/learning/${tag}`}></Pagination>
        </div>

        <!--侧边栏-->
        <div class="hidden lg:flex flex-col w-5/12 px-10 items-start gap-12 mt-[35px]">
            {
                learningChannels.map(channel => (
                        <div class="w-full flex flex-col gap-5">
                            <p class="font-bold text-xl text-white">{channel.name}</p>
                            <div class="flex flex-col w-full border border-[#4a4c57] hover:bg-[#1e1f22] shadow-md px-5 py-5 gap-3 border-b rounded-2xl">
                                {
                                    channel.pages.map(page => (
                                            <a class="text-white" href={page.url}>{page.name}</a>
                                    ))
                                }
                            </div>
                        </div>
                ))
            }
        </div>
    </div>
</Layout>

